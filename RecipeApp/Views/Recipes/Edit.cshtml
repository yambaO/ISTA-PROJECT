@model RecipeApp.Models.RecipeModelCuisine

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
     <div class="form-horizontal">
          <h2>@Html.DisplayFor(x => x.RecipeItem.RecipeName)</h2>
          <h3>@Html.DisplayFor(x => x.RecipeItem.Cuisine.CuisineName)</h3>
          <hr />
          @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     <div class="row">
         @{
             //The hidden for statement is used for the ID when submitting an edit.
             //If it's not there, it gives it an id of 0 which is not accurate
         }
         @Html.HiddenFor(x => x.RecipeItem.Id)
         <div class="col-md-5">
             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.RecipeItem.RecipeName, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.RecipeName, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.CuisineItems, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.DropDownListFor(model => model.RecipeItem.Cuisine.Id, RecipeApp.Controllers.TypeOfCuisinesController.GetDropDownItems(), htmlAttributes: new { @class = "form-control" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.TextAreaFor(model => model.RecipeItem.Description, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.Description, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.TextAreaFor(model => model.RecipeItem.Ingredients, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.Ingredients, "", new { @class = "text-danger" })
                 </div>
             </div>


             <div class="form-group">
                 <button class="btn btn-danger white-text">@Html.ActionLink("Back", "Details", new { id = Model.RecipeItem.Id })</button>
                 <input type="submit" value="Save" class="btn btn-success" />
             </div>
         </div>


         <div class="col-md-7">

             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.Servings, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.RecipeItem.Servings, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.Servings, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.RecipeItem.Time, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.Time, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-group">
                 @Html.LabelFor(model => model.RecipeItem.PreparationInstructions, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.TextAreaFor(model => model.RecipeItem.PreparationInstructions, 10, 40, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.RecipeItem.PreparationInstructions, "", new { @class = "text-danger" })
                 </div>
             </div>

         </div>
     </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
